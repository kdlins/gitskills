
/*==============================================================*/
/* DBMS name:      ORACLE Version 11g                           */
/* Created on:     2015/6/15 11:55:21                           */
/*==============================================================*/


alter table TB_MenuRole
   drop constraint FK_TB_MENUR_REFERENCE_TB_ROLE;

alter table TB_MenuRole
   drop constraint FK_TB_MENUR_REFERENCE_TB_MENU;

alter table TB_UserRole
   drop constraint FK_TB_USERR_REFERENCE_TB_USERS;

alter table TB_UserRole
   drop constraint FK_TB_USERR_REFERENCE_TB_ROLE;

alter table TB_Users
   drop constraint FK_TB_USERS_REFERENCE_TB_DEPAR;

drop table TB_Department cascade constraints;

drop table TB_Menu cascade constraints;

drop table TB_MenuRole cascade constraints;

drop table TB_Role cascade constraints;

drop table TB_UserRole cascade constraints;

drop table TB_Users cascade constraints;

/*==============================================================*/
/* Table: "TB_Department"                                       */
/*==============================================================*/
create table TB_Department
(
   department_id      VARCHAR(50)          not null,
   department_name    VARCHAR(50),
   parent_id         VARCHAR(50),
   department_level              VARCHAR(10),
   status             VARCHAR(10),
   constraint PK_TB_DEPARTMENT primary key (department_id)
);

/*==============================================================*/
/* Table: "TB_Menu"                                             */
/*==============================================================*/
create table TB_Menu
(
   menu_id            VARCHAR(50)          not null,
   menu_name          VARCHAR(50),
   menu_url           VARCHAR(50),
   parent_id          VARCHAR(50),
   menu_level              VARCHAR(10),
   sort_order         VARCHAR(50),
   status             VARCHAR(10),
   remark             VARCHAR(1000),
   constraint PK_TB_MENU primary key (menu_id)
);

/*==============================================================*/
/* Table: "TB_MenuRole"                                         */
/*==============================================================*/
create table TB_MenuRole
(
   id                 VARCHAR(50)          not null,
   role_id            VARCHAR(50),
   menu_id            VARCHAR(50),
   role_type          VARCHAR(10),
   button_id          VARCHAR(50),
   constraint PK_TB_MENUROLE primary key (id)
);

/*==============================================================*/
/* Table: "TB_Role"                                             */
/*==============================================================*/
create table TB_Role
(
   role_id            VARCHAR(50)          not null,
   role_name          VARCHAR(50),
   description        VARCHAR(500),
   createtime         DATE,
   modifytime         DATE,
   constraint PK_TB_ROLE primary key (role_id)
);

/*==============================================================*/
/* Table: "TB_UserRole"                                         */
/*==============================================================*/
create table TB_UserRole 
(
   id                 VARCHAR(50)          not null,
   role_id            VARCHAR(50),
   user_id            VARCHAR(50),
   constraint PK_TB_USERROLE primary key (id)
);

/*==============================================================*/
/* Table: "TB_Users"                                            */
/*==============================================================*/
create table TB_Users 
(
   user_id            VARCHAR(50)          not null,
   user_name          VARCHAR(50),
   user_password      VARCHAR(50),
   fullname           VARCHAR(50),
   department_id      VARCHAR(50),
   status             VARCHAR(10),
   createtime         DATE,
   modifytime         DATE,
   remark             VARCHAR(1000),
   constraint PK_TB_USERS primary key (user_id)
);

comment on table TB_Users is
'用户信息表';

alter table TB_MenuRole
   add constraint FK_TB_MENUR_REFERENCE_TB_ROLE foreign key (role_id)
      references TB_Role (role_id);

alter table TB_MenuRole
   add constraint FK_TB_MENUR_REFERENCE_TB_MENU foreign key (menu_id)
      references TB_Menu (menu_id);

alter table TB_UserRole
   add constraint FK_TB_USERR_REFERENCE_TB_USERS foreign key (user_id)
      references TB_Users (user_id);

alter table TB_UserRole
   add constraint FK_TB_USERR_REFERENCE_TB_ROLE foreign key (role_id)
      references TB_Role (role_id);

alter table TB_Users
   add constraint FK_TB_USERS_REFERENCE_TB_DEPAR foreign key (department_id)
      references TB_Department (department_id);

表说明：权限模块总共就6张表，即部门表、用户表、角色表、用户角色表、菜单表、菜单角色表(包含按钮权限)。用户表和角色表之间的关系是通用的多对多的关系，没什么好说的。看看TB_MenuRole表，这个表用来存储角色的菜单权限和按钮权限，其中role_type取值为menu和button，如果是menu，则此行记录用于存储菜单权限，button_id为空；如果是button，则此行记录用于存储菜单下的某一个按钮的权限，menu_id为按钮所在的菜单id，button_id为对应的按钮id。还有一个问题就是按钮的id从哪里来？是否还应该有一个储存按钮ID的表呢？答案是不需要，后面会介绍。

在点击设置按操作的时候传递一个菜单url，然后在代码里面通过反射得到所有的按钮，然后勾选按钮后保存到数据库。注意一个页面的按钮的ID不会重复，所以通过这样可以取到唯一的按钮，而在数据表TB_MenuRole中保存的如果是按钮权限，是有保存Menu_Id的，所以不必担心不同页面的问题。这样设计的好处是当程序员在页面上面新增删除按钮后不用修改配置，通过反射即可加载页面的即时按钮个数。
